from typing import List
from fastapi import APIRouter, Query, UploadFile, File
from app.models.schedule import Schedule
from app.models.schedule_upload import UploadResponse
from app.models.teacher_schedule import TeacherScheduleResponse
from app.services.schedule_service import ScheduleService

router = APIRouter()

# üìò –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π
@router.get(
    "/",
    response_model=List[Schedule],
    summary="–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è",
    description=(
        "–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π, –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö. "
        "–ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤–∫–ª—é—á–∞–µ—Ç –≥—Ä—É–ø–ø—É, —Å–º–µ–Ω—É –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∑–∞–Ω—è—Ç–∏–π."
    ),
    response_description="–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≥—Ä—É–ø–ø —Å –∏—Ö —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º."
)
async def get_all_schedules():
    return await ScheduleService.get_all_schedules()


# üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≥—Ä—É–ø–ø—ã
@router.get(
    "/{group_name}",
    response_model=Schedule,
    summary="–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã",
    description=(
        "–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã. "
        "–ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä `day`, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ –Ω–∞ –æ–¥–∏–Ω –¥–µ–Ω—å."
    ),
    response_description="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –∏–ª–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –¥–µ–Ω—å."
)
async def get_schedule(
    group_name: str,
    day: str | None = Query(
        None,
        description="–ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ: –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç', 'Mon')."
    )
):
    return await ScheduleService.get_schedule_by_group(group_name, day)


# üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ–≥–æ DOCX —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
@router.post(
    "/upload",
    response_model=UploadResponse,
    summary="–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ (.docx)",
    description=(
        "–ü—Ä–∏–Ω–∏–º–∞–µ—Ç DOCX-—Ñ–∞–π–ª —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö. "
        "–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –º–æ–∂–Ω–æ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å JSON-—Ñ–∞–π–ª —Å–æ —Å–º–µ–Ω–∞–º–∏ (`group_shifts.json`). "
        "–ü–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π —Å—Ç–∞—Ä–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–∞–µ—Ç—Å—è."
    ),
    response_description="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è—Ö –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –≥—Ä—É–ø–ø."
)
async def upload_schedule(
    schedule_file: UploadFile = File(
        ...,
        description="DOCX —Ñ–∞–π–ª —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –∑–∞–Ω—è—Ç–∏–π."
    ),
    shifts_file: UploadFile | None = File(
        None,
        description="–ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ: JSON-—Ñ–∞–π–ª —Å–æ —Å–º–µ–Ω–∞–º–∏ –∏ –∫–∞–±–∏–Ω–µ—Ç–∞–º–∏."
    )
):
    return await ScheduleService.upload_schedule(schedule_file, shifts_file)


# ‚ùå –£–¥–∞–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
@router.delete(
    "/{group_name}",
    summary="–£–¥–∞–ª–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã",
    description="–£–¥–∞–ª—è–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.",
    response_description="–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏."
)
async def delete_schedule(group_name: str):
    return await ScheduleService.delete_schedule(group_name)


# üë®‚Äçüè´ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
@router.get(
    "/teacher/{fio:path}",
    response_model=TeacherScheduleResponse,
    summary="–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è",
    description=(
        "–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è. "
        "–ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä `day`, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –∑–∞–Ω—è—Ç–∏—è –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–µ–Ω—å."
    ),
    response_description="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –ø–æ –¥–Ω—è–º –∏ —Å–º–µ–Ω–∞–º."
)
async def get_teacher_schedule(
    fio: str,
    day: str | None = Query(
        None,
        description="–ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ: –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç', 'Mon')."
    )
):
    return await ScheduleService.get_teacher_schedule(fio, day)
